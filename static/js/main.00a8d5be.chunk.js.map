{"version":3,"sources":["Feel_pic.png","components/FooterComponent.js","components/HeaderComponent.js","components/MainComponent.js","components/QuestionCompoent.js","components/QuizComponent.js","components/ResultComponent.js","components/AboutComponent.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Footer","props","react_default","a","createElement","className","href","Header","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_router_dom","to","Component","Main","_this","goToQuiz","bind","assertThisInitialized","history","push","HeaderComponent","reactstrap_es","src","feel","alt","onClick","FooterComponent","withRouter","Question","handleOptionChange","changeEvent","console","log","target","value","setState","selectedOption","onChange","id","score","CSV","state","Never","Rarely","Sometimes","Often","Always","RenderRating","displayOption","type","name","checked","reload","question_text","Quiz","handleQuestionChange","event","i","currentSection","undefined","scoreArr","finalScore","firstScore","secondScore","thirdScore","fourthScore","pathname","reload0","reload1","reload2","reload3","reload4","reload5","window","scroll","questions","titles","scoreReverse","1","2","3","4","5","currentQuestions","DyanmicButton","_this2","QuestionCompoent","Result","renderMessage","goHome","location","About","App","react_router","exact","path","component","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.00a8d5be.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Feel_pic.bd099ca9.png\";","import React from 'react';\n\nfunction Footer(props) {\n\n    return(\n        <div className=\"footer\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-12 align-self-center\">\n                        <div className=\"text-center\">\n                            <a className=\"btn btn-social-icon btn-facebook\" href=\"https://www.facebook.com/DeirdreBreakenridge\"><i className=\"fa fa-facebook\"></i></a>\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"https://twitter.com/dbreakenridge\"><i className=\"fa fa-twitter\"></i></a>\n                            <a className=\"btn btn-social-icon btn-instagram\" href=\"https://www.instagram.com/dbreakenridge\"><i className=\"fa fa-instagram\"></i></a>\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"https://www.linkedin.com/in/deirdrebreakenridge\"><i className=\"fa fa-linkedin\"></i></a>\n                            <a className=\"btn btn-social-icon\" href=\"https://www.deirdrebreakenridge.com/contact-us/\"><i className=\"fa fa-envelope-o\"></i></a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-auto\">\n                        <p>© Copyright Deidre Breakenridge</p>\n                    </div>\n                </div>\n        </div>\n    )\n}\n\n\n\nexport default Footer;","import React, { Component } from 'react';\nimport {NavbarBrand, Navbar, Jumbotron, Nav, NavbarToggler, Collapse, NavItem,\n    Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Input, Label } from \"reactstrap\";\nimport { NavLink } from 'react-router-dom';\nimport feel from \"../Feel_pic.png\";\n\nclass Header extends Component {\n\n\n    constructor(props){\n        super(props);\n    }\n\n    render() {\n        return(\n            <div>\n                <ul>\n                    <li> <NavLink className =\"nav-link\" to = \"/\">\n                        <span className =\"fa fa-home fa-lg\"></span>Home\n                    </NavLink></li>\n                    <li> <NavLink className =\"nav-link\" to = \"/FEEL\">\n                        <span className =\"fa fa-clipboard fa-lg\"></span>Feel quiz\n                    </NavLink></li>\n                    <li> <NavLink className =\"nav-link\" to = \"/about\">\n                        <span className =\"fa fa-info-circle fa-lg\"></span>About\n                    </NavLink></li>\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport Footer from \"./FooterComponent\";\nimport feel from \"../Feel_pic.png\";\nimport {Button, Jumbotron} from 'reactstrap';\nimport { withRouter } from 'react-router-dom'\nimport Header from \"./HeaderComponent\";\n\n\nclass Main extends Component {\n\n    constructor(props) {\n        super(props);\n        this.goToQuiz = this.goToQuiz.bind(this);\n\n    }\n\n    goToQuiz() {\n        this.props.history.push('/FEEL');\n\n    }\n\n    render() {\n        return (\n            <div className=\"main-container\">\n                <Header/>\n                <Jumbotron>\n                    <div className=\"container\">\n                        <div className=\"row row-header\">\n                            <div className=\"col-12 col-sm-6\">\n                                <h2>FEEL TEST</h2>\n\n                                <h3 className={\"titleInfo\"}>If you FEEL first before you communicate, you'll build stronger relationships\n                                    through all of your online channels and in-person too. Here are several questions\n                                    you can ask yourself about Facing your <b>Fears</b>, communicating with <b>Empathy</b>,\n                                    using <b>Ethics</b> and good judgment and discovering your <b>Love</b>\n                                    for the mission. Modern Communicators are generally taught to consider their audience, timing,\n                                    channels, messaging and measurement. However, when you add FEEL to your plan,\n                                    your communications will resonate and your relationships will grow stronger with\n                                    the people that matter.\n                                </h3>\n                            </div>\n                            <div className={\"col-12 col-sm-6\"}>\n                                <img src={feel} alt=\"FEEL\" />\n                                <h3>This Quiz is still in BETA mode, for best results <b>DO NOT</b> refresh your page when taking the quiz</h3>\n                            </div>\n                        </div>\n                    </div>\n                </Jumbotron>\n                <div>\n                    <Button onClick={this.goToQuiz} className='btn btn-lg btn-info'>Start the FEEL test!</Button>\n                </div>\n                <Footer/>\n            </div>\n        )\n    }\n\n}\nexport default withRouter(Main);","import React, { Component } from 'react';\n\n\nclass Question extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedOption: \"noneselected\",\n        };\n        this.score = {'Never': 1, 'Rarely': 2, 'Sometimes': 3, 'Often': 4, 'Always': 5};\n        this.RenderRating = this.RenderRating.bind(this);\n    }\n\n    handleOptionChange = changeEvent => {\n        console.log(changeEvent.target.value);\n        this.setState({\n            selectedOption: changeEvent.target.value\n        });\n        this.props.onChange(this.props.id, this.score[changeEvent.target.value]);\n        console.log(this.props.CSV + 'CDV');\n    };\n\n    RenderRating(displayOption) {\n\n        return (\n            <div className=\"form-check col-md-2\">\n                <label>\n                    <input\n                        type=\"radio\"\n                        name=\"react-tips\"\n                        value={displayOption}\n                        checked={this.state.selectedOption === displayOption && this.props.reload === false}\n                        onChange={this.handleOptionChange}\n                        className=\"form-check-input\"\n                    />\n                    <span className=\"checkmark\"></span>\n                    <p className=\"option\">{displayOption}</p>\n                </label>\n\n            </div>\n        );\n    }\n\n    render() {\n        return (\n\n            <div className=\"row\">\n                <h4>{this.props.question_text}</h4>\n                <form className=\"form-inline questions\">\n                    <div className=\"row\">\n                        <div className={\"col-md-1\"}/>\n                        {this.RenderRating(\"Never\")}\n                        {this.RenderRating(\"Rarely\")}\n                        {this.RenderRating(\"Sometimes\")}\n                        {this.RenderRating(\"Often\")}\n                        {this.RenderRating(\"Always\")}\n                    </div>\n                </form>\n            </div>\n\n        )\n    }\n}\nexport default Question;","import React, { Component } from 'react';\nimport Footer from \"./FooterComponent\";\nimport feel from \"../Feel_pic.png\";\nimport { withRouter } from 'react-router-dom'\nimport Question from \"./QuestionCompoent\";\nimport {Button} from 'reactstrap';\nimport Header from \"./HeaderComponent\";\n\n\nclass Quiz extends Component {\n\n    constructor(props) {\n        super(props);\n        //TODO import these from a static file\n        this.questions = ['Do you take time every day to learn something new in your professional role (i.e. using technology, working with a new team, learn a new responsibility)?\\n',\n        'Do you take time every day to learn something personally related to your interests/hobby?\\n',\n        'How open (meaning how much you listen and engage to learn more) are you to another person’s perspective at work about work-related topics?\\n',\n        'How open (meaning how much you listen and engage to learn more) are you to another person’s perspective when sharing an opinion about your personal growth and development?\\n',\n        'Do you step out of your comfort zone to try new activities at work?\\n',\n        'Do you step out of your comfort zone to try new personal endeavors that you’ve never tried before in your free time?\\n',\n        'Do you “accept” what someone tells you on the surface, or do you dig deeper to ask questions about what you’re being told?',\n        'Do you take the time to get to know someone after you connect on social media?\\n',\n        'Do you listen actively as people are sharing information with you (as in, you take notes, ask follow-up questions, repeat back what they’ve shared, etc.)?\\n',\n        'When someone shares a challenging experience with you, do you take time away from your intended discussion to help him/her?\\n',\n        'When someone shares a challenging experience with you, do you listen and refrain from sharing something that’s happened to you that’s difficult to manage?\\n',\n        'Do you go beyond social media to learn about someone before you engage with them?\\n',\n        'Are you an objective party (without sharing your biased opinion or your company\\'s) about the information you share on social media?\\n',\n        'Is your communication accurate (meaning you always check the credibility of the source you’re using) when you share professionally?\\n',\n        'Is your communication accurate (meaning you always check the credibility of the source you’re using) when you share personally through channels?\\n',\n        'Is your communication fair (meant to help without any harmful repercussions from the communication) to all of the parties who are intended to receive the information?\\n',\n        'Do you avoid exaggeration (embellish facts or details of a situation) in your storytelling professionally?\\n',\n        'Do you avoid exaggeration  (embellish facts or details of a situation) in your storytelling personally?\\n',\n        'Do you believe in and wholeheartedly support your company’s mission or cause that you’re sharing?\\n',\n        'Do your professional peers think you are passionate about your work goals?\\n',\n        'Do your close contacts (as in friends and family) think you are passionate about your personal goals?\\n',\n        'Do you share information about your professional role with enthusiasm on social media?\\n',\n        'Do you share information about your personal achievements with excitement on social media?\\n',\n        'Do people engage with you on social media (i.e. they ask questions, like your\\n' +\n        'posts, re-share) when you discuss work initiatives? \\n',];\n        this.titles = ['Part I: Face Fears', 'Part II: Engage with Empathy', 'Part III: Use Ethics',\n            'Part IV: Unleash the Love of Your Mission'];\n        this.scoreReverse= {1: 'Never', 2: 'Rarely', 3: 'Sometimes', 4: 'Often', 5: 'Always'};\n        console.log('contrusctor called');\n        this.state = {\n            currentSection: 0,\n            reload0: false,\n            reload1: false,\n            reload2: false,\n            reload3: false,\n            reload4: false,\n            reload5: false,\n        };\n        this.scoreArr = [];\n        this.handleOptionChange = this.handleOptionChange.bind(this);\n    }\n\n    //\n    render() {\n        console.log(this.scoreArr);\n        return (\n            <div className={'bg' + this.state.currentSection}>\n                <Header/>\n                <div className={\"one\"}>\n\n                    {this.currentQuestions(this.state.currentSection, this.state.reload)}\n                </div>\n                <div>\n                    {this.DyanmicButton(this.state.currentSection)}\n                </div>\n                <Footer/>\n            </div>\n\n        )\n    }\n\n\n    handleQuestionChange = event => {\n        console.log(event);\n        let exit = false;\n        for(let i = this.state.currentSection*6; i < this.state.currentSection*6 + 6; i++){\n            if(this.scoreArr[i] === undefined){\n                exit = true;\n                break;\n            }\n        }\n\n        if (event === 'prev') {\n            this.setState({\n                currentSection: this.state.currentSection - 1\n            });\n        } else if (event === 'next') {\n            this.setState({\n                currentSection: this.state.currentSection + 1\n            });\n        } else if (event === 'fin') {\n            let finalScore = 0;\n            let firstScore = 0;\n            let secondScore = 0;\n            let thirdScore = 0;\n            let fourthScore = 0;\n            for(let i = 0; i < 24; i++){\n                if(i < 6){\n                    if(this.scoreArr[i]) firstScore += this.scoreArr[i];;\n                } else if (i < 12) {\n                    if(this.scoreArr[i]) secondScore += this.scoreArr[i];;\n                } else if (i < 18) {\n                    if(this.scoreArr[i]) thirdScore += this.scoreArr[i];;\n                } else {\n                    if(this.scoreArr[i]) fourthScore += this.scoreArr[i];;\n                }\n                if(this.scoreArr[i]) finalScore += this.scoreArr[i];\n            }\n            this.props.history.push({\n                pathname: '/Result',\n                state: { score: finalScore, firstScore: firstScore, secondScore: secondScore,\n                    thirdScore: thirdScore, fourthScore: fourthScore}\n            });\n\n            this.setState({\n                reload0: true,\n                reload1: true,\n                reload2: true,\n                reload3: true,\n                reload4: true,\n                reload5: true,\n            });\n        }\n        window.scroll(0, 0);\n    };\n\n    handleOptionChange(id, event) {\n        switch (id) {\n            case 0:\n                this.setState({\n                    reload0: false\n                });\n                break;\n            case 1:\n                this.setState({\n                    reload1: false\n                });\n                break;\n            case 2:\n                this.setState({\n                    reload2: false\n                });\n                break;\n            case 3:\n                this.setState({\n                    reload3: false\n                });\n                break;\n            case 4:\n                this.setState({\n                    reload4: false\n                });\n                break;\n            case 5:\n                this.setState({\n                    reload5: false\n                });\n                break;\n            default:\n        }\n        console.log(id + '       ' + event);\n        this.scoreArr[(this.state.currentSection * 6) + id] = event;\n    }\n\n\n    //Button that will change dynamically based on what question set the user is currently looking at.\n    DyanmicButton(currentSection) {\n        console.log(currentSection);\n        if (currentSection === 3) {\n            return (\n                <Button onClick={() => this.handleQuestionChange('fin')} className='btn btn-lg btn-info'>Submit</Button>\n            );\n        } else {\n            return (\n                <Button onClick={() => this.handleQuestionChange('next')} className='btn btn-lg btn-info'>\n                    Next\n                </Button>\n            );\n        } /*else {\n            return (\n                <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                        <Button onClick={() => this.handleQuestionChange('prev')} className='btn btn-lg btn-info'>Go Back</Button>\n                    </div>\n                    <div className=\"col-sm-6\">\n                        <Button onClick={() => this.handleQuestionChange('next')} className='btn btn-lg btn-info'>Next</Button>\n                    </div>\n                </div>\n            );\n        } */\n\n    }\n\n\n    currentQuestions(currentSection) {\n        return (\n            <div>\n                <h1>{this.titles[currentSection]}</h1>\n                <Question reload={this.state.reload0}\n                          question_text={this.questions[(currentSection * 6)]}\n                          id={0}\n                          onChange={this.handleOptionChange}/>\n                <Question reload={this.state.reload1}\n                          question_text={this.questions[(currentSection * 6) + 1]}\n                          id={1}\n                          onChange={this.handleOptionChange}/>\n                <Question reload={this.state.reload2}\n                          question_text={this.questions[(currentSection * 6) + 2]}\n                          id={2}\n                          onChange={this.handleOptionChange}/>\n                <Question reload={this.state.reload3}\n                          question_text={this.questions[(currentSection * 6) + 3]}\n                          id={3}\n                          onChange={this.handleOptionChange}/>\n                <Question reload={this.state.reload4}\n                          question_text={this.questions[(currentSection * 6) + 4]}\n                          id={4}\n                          onChange={this.handleOptionChange}/>\n                <Question reload={this.state.reload5}\n                          question_text={this.questions[(currentSection * 6) + 5]}\n                          id={5}\n                          onChange={this.handleOptionChange}/>\n            </div>\n        );\n    }\n}\n\nexport default Quiz;","import React, { Component } from 'react';\nimport Footer from \"./FooterComponent\";\nimport feel from \"../Feel_pic.png\";\nimport {Button} from 'reactstrap';\n\nimport Header from \"./HeaderComponent\";\n\n\nclass Result extends Component {\n\n    constructor(props) {\n        super(props);\n        this.renderMessage = this.renderMessage.bind(this);\n        this.goHome = this.goHome.bind(this);\n    }\n    goHome() {\n        this.props.history.push('/');\n\n    }\n\n    renderMessage(score) {\n        if(score < 31) {\n            return(\n                <p>You need work with the FEEL first approach.</p>\n            );\n        } else if (score < 61) {\n            return(\n                <p>You're starting to FEEL, but you need more focus.</p>\n            );\n        } else if (score < 91) {\n            return(\n                <p>FEEL is a part of your approach ... don't stop now!</p>\n            );\n        } else {\n            return(\n                <p>Great work! You FEEL first before you communicate.</p>\n            );\n        }\n    }\n\n\n    render() {\n        return (\n            <div>\n                <Header/>\n                <h3> Your Score for Part I Face Fears is : {this.props.location.state.firstScore}/30</h3>\n                <h3> Your Score for Part II Engage with Empathy is : {this.props.location.state.secondScore}/30</h3>\n                <h3> Your Score for Part III Use Ethics is : {this.props.location.state.thirdScore}/30</h3>\n                <h3> Your Score for Part IV Face Fears is : {this.props.location.state.fourthScore}/30</h3>\n                <h3> Your Overall Score is {this.props.location.state.score} out of 120</h3>\n                <h2>{this.renderMessage(this.props.location.state.score)}</h2>\n\n                <Button onClick={this.goHome} className='btn btn-lg btn-info retake'>Home</Button>\n\n                <Footer/>\n            </div>\n        )\n    }\n\n}\nexport default Result;","import React, { Component } from 'react';\nimport Footer from \"./FooterComponent\";\nimport feel from \"../Feel_pic.png\";\nimport {Button} from 'reactstrap';\n\nimport Header from \"./HeaderComponent\";\n\n\nclass About extends Component {\n\n    constructor(props) {\n        super(props);\n\n    }\n\n\n    render() {\n        return (\n            <div>\n                <Header/>\n                <h1> About this quiz: </h1>\n                <h3>If you FEEL first before you communicate, you'll build stronger relationships through all of your\n                    online channels and in-person too. Here are several questions you can ask yourself about Facing\n                    your Fears, communicating with Empathy, using Ethics and good judgment and discovering your Love\n                    for the mission. Modern Communicators are generally taught to consider their audience, timing,\n                    channels, messaging and measurement. However, when you add FEEL to your plan, your communications\n                    will resonate and your relationships will grow stronger with the people that matter.</h3>\n                <img className=\"pic\" src={feel}></img>\n                <Footer/>\n            </div>\n        )\n    }\n\n}\nexport default About;","import React, { Component } from 'react';\nimport feel from './Feel_pic.png';\nimport './App.css';\nimport Main from './components/MainComponent';\nimport Quiz from './components/QuizComponent';\nimport Result from './components/ResultComponent';\nimport About from './components/AboutComponent'\nimport { BrowserRouter, Route, HashRouter } from 'react-router-dom';\n\n\nclass App extends Component {\n  render() {\n    return (\n        <HashRouter>\n            <div className=\"App container\">\n                <Route exact path=\"/\" component={Main} />\n                <Route exact path=\"/FEEL\" component={Quiz} />\n                <Route exact path=\"/Result\" component={Result} />\n                <Route exact path=\"/About\" component={About} />\n            </div>\n        </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n"],"sourceRoot":""}